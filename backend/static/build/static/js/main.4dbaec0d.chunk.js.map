{"version":3,"sources":["CalculatorFrontEnd/Components/Input/Input.jsx","CalculatorFrontEnd/Components/CalculationLogs/CalculationLogs.jsx","CalculatorFrontEnd/Calculator.jsx","App.js","reportWebVitals.js","index.js"],"names":["math","create","all","input","props","handleChange","event","setState","inputString","target","value","handleClear","calculateString","state","errorMessage","res","evaluate","inputAndRes","concat","socket","emit","error","bind","class","type","this","onChange","placeholder","onClick","Component","CalculationLogs","logs","length","reverseLogs","reverse","map","log","io","App","useState","setLogs","useEffect","on","data","console","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAKMA,EAAOC,YAAOC,IADL,IAGMC,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAUVC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAZ3B,EAelBC,YAAc,WACV,EAAKJ,SAAS,CAACC,YAAa,MAhBd,EAmBlBI,gBAAkB,WACd,GAA+B,KAA3B,EAAKC,MAAML,YAAf,CAIA,EAAKD,SAAS,CAACO,aAAc,KAC7B,IACI,IAAIC,EAAMf,EAAKgB,SAAS,EAAKH,MAAML,aAC/BS,EAAc,EAAKJ,MAAML,YAAYU,OAAO,IAAMH,GACtD,EAAKR,SAAS,CAACC,YAAYS,IAC3B,EAAKb,MAAMe,OAAOC,KAAK,wBAAyBH,GAEpD,MAAOI,GACH,EAAKd,SAAS,CAACO,aAAc,UAAWO,UAXxC,EAAKd,SAAS,CAACO,aAAc,wBAnBjC,EAAKD,MAAQ,CACTL,YAAY,GACZM,aAAa,IAEjB,EAAKT,aAAe,EAAKA,aAAaiB,KAAlB,gBACpB,EAAKX,YAAc,EAAKA,YAAYW,KAAjB,gBACnB,EAAKV,gBAAkB,EAAKA,gBAAgBU,KAArB,gBART,E,0CAoClB,WACI,OACI,gCACI,gCACI,uBAAOC,MAAM,cAAcC,KAAK,OAAOd,MAAOe,KAAKZ,MAAML,YAAakB,SAAUD,KAAKpB,aAAcsB,YAAY,qDAC/G,gCACI,wBAAQJ,MAAM,kBAAkBC,KAAK,SAASI,QAASH,KAAKb,gBAA5D,uBACA,wBAAQW,MAAM,iBAAiBC,KAAK,SAASI,QAASH,KAAKd,YAA3D,yBAGR,mBAAGY,MAAM,oBAAT,SAA8BE,KAAKZ,MAAMC,sB,GA/CtBe,aCLdC,E,4JACjB,WACI,GAA+B,IAA3BL,KAAKrB,MAAM2B,KAAKC,OAChB,OACI,yEAGR,IAAMC,EAAcR,KAAKrB,MAAM2B,KAAKG,UACpC,OACI,oBAAIX,MAAM,aAAV,SACKU,EAAYE,KAAI,SAAAC,GAAG,OAAI,oBAAIb,MAAM,kBAAV,SAA6Ba,a,GAVxBP,aCKvCV,G,OAASkB,aAAG,mBAwBHC,MAtBf,WACI,MAAwBC,mBAAS,CAAC,2BAAlC,mBAAOR,EAAP,KAAaS,EAAb,KASA,OAPAC,qBAAU,WACNtB,EAAOuB,GAAG,UAAU,SAAAC,GAClBC,QAAQR,IAAI,UACZI,EAAQG,QAET,IAGD,gCACI,uBACA,kEACA,cAAC,EAAD,CAAOxB,OAAQA,IACf,0KACA,mDACA,cAAC,EAAD,CAAiBY,KAAMA,QCdpBO,MARf,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4dbaec0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Input.css';\r\nimport { create, all } from 'mathjs';\r\n\r\nconst config = { }\r\nconst math = create(all, config)\r\n\r\nexport default class input extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inputString:'',\r\n            errorMessage:''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n        this.calculateString = this.calculateString.bind(this)\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({inputString: event.target.value});\r\n    }\r\n\r\n    handleClear = () => {\r\n        this.setState({inputString: \"\"})\r\n    }\r\n\r\n    calculateString = () => {\r\n        if (this.state.inputString === \"\") {\r\n            this.setState({errorMessage: \"Input is empty. :(\"});\r\n            return;\r\n        }\r\n        this.setState({errorMessage: \"\"});\r\n        try {\r\n            let res = math.evaluate(this.state.inputString);\r\n            let inputAndRes = this.state.inputString.concat(\"=\" + res);\r\n            this.setState({inputString:inputAndRes});\r\n            this.props.socket.emit('handleCalculationLogs', inputAndRes);\r\n        }\r\n        catch (error) {\r\n            this.setState({errorMessage: \"ERROR: \"+ error});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <input class=\"input-group\" type=\"text\" value={this.state.inputString} onChange={this.handleChange} placeholder=\"Type e.g.: 1 + 1. Then press 'Calculate' button.\"/>\r\n                    <div>\r\n                        <button class=\"btn btn-primary\" type=\"button\" onClick={this.calculateString}>Calculate</button>\r\n                        <button class=\"btn btn-danger\" type=\"button\" onClick={this.handleClear}>Clear</button>\r\n                    </div>\r\n                </div>\r\n                <p class=\"error text-danger\">{this.state.errorMessage}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class CalculationLogs extends Component {\r\n    render() {\r\n        if (this.props.logs.length === 0){\r\n            return (\r\n                <p>Server connected. Try some calculations!</p>\r\n            )\r\n        }\r\n        const reverseLogs = this.props.logs.reverse();\r\n        return(\r\n            <ul class=\"list-group\">\r\n                {reverseLogs.map(log => <li class=\"list-group-item\">{log}</li>)}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Calculator.css';\r\nimport { io } from \"socket.io-client\";\r\nimport Input from './Components/Input/Input';\r\nimport CalculationLogs from './Components/CalculationLogs/CalculationLogs';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst socket = io(\"localhost:5000\");\r\n\r\nfunction App() {\r\n    const [logs, setLogs] = useState([\"Not connect to server.\"]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"update\", data =>{\r\n          console.log(\"update\")\r\n          setLogs(data);\r\n        })\r\n      }, []);\r\n\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            <h1>Calculator app exercise - Sezzle</h1>\r\n            <Input socket={socket}/>\r\n            <p>Show the last 10 calculations descending. Support open on multiple tabs within a browser simultaneously. Results remain between sessions.</p>\r\n            <h3>Calculation logs:</h3>\r\n            <CalculationLogs logs={logs}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// import logo from './logo.svg';\nimport './App.css';\nimport CalculatorFrontend from './CalculatorFrontEnd/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CalculatorFrontend></CalculatorFrontend>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}